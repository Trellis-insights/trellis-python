# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class TransformStatus(str, enum.Enum):
    """
    An enumeration.
    """

    RUNNING = "running"
    FAILED = "failed"
    COMPLETED = "completed"
    NOT_STARTED = "not_started"

    def visit(
        self,
        running: typing.Callable[[], T_Result],
        failed: typing.Callable[[], T_Result],
        completed: typing.Callable[[], T_Result],
        not_started: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is TransformStatus.RUNNING:
            return running()
        if self is TransformStatus.FAILED:
            return failed()
        if self is TransformStatus.COMPLETED:
            return completed()
        if self is TransformStatus.NOT_STARTED:
            return not_started()
