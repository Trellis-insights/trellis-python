# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ParseStrategy(str, enum.Enum):
    """
    An enumeration.
    """

    OPTIMIZED = "optimized"
    TRANSFORMER = "transformer"
    OCR = "ocr"

    def visit(
        self,
        optimized: typing.Callable[[], T_Result],
        transformer: typing.Callable[[], T_Result],
        ocr: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ParseStrategy.OPTIMIZED:
            return optimized()
        if self is ParseStrategy.TRANSFORMER:
            return transformer()
        if self is ParseStrategy.OCR:
            return ocr()
